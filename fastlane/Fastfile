default_platform :android

#Default
ENV["APP_NAME"]                     = "R6Companion"

#Crashlytics
ENV['CRASHLYTICS_API_TOKEN']        = "f984f3a695c3cdd7cd6a38475b6d30b7f398ce4d"
ENV['CRASHLYTICS_BUILD_SECRET']     = "656d6a02a40d9c035b98871873ca71ce43a897cb6b14cd996b323d8b2c5851b8"
ENV['CRASHLYTICS_GROUPS']           = "rs6internalandroid"

#Slack
ENV['SLACK_URL']                    = "https://hooks.slack.com/services/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"
ENV['FL_SLACK_CHANNEL']             = "#rainboxsix-app"

desc "This lane check that all Unit Test passed in release variant"
  lane :integration_checkup do

	gradle(task: "testReleaseUnitTest")

	slack(
		message: "Master quality OK, all UT are ‚úÖ",
		default_payloads: [:last_git_commit_message, :git_author],
		payload: {
		    "App name" => ENV["APP_NAME"],
		    "Version name" => Actions.lane_context["VERSION_NAME"],
		    "Version code" => Actions.lane_context["VERSION_CODE"]
		}
	)

end

desc "This lane builds an APK, submit it to Fabric and add a message in the rainboxsix-app slack channel"
  lane :beta do

    increment_version_code()

	gradle(
		task: 'assemble',
		build_type: 'Release'
	)

	ApkPath = lane_context[SharedValues:: GRADLE_APK_OUTPUT_PATH]

	# Ask the user of fastlane to enter a changelog
    changelog = prompt(text: "Enter the release note for Crashlytics: ",
                       multi_line_end_keyword: "END")

    crashlytics(
     	apk_path: ApkPath,
		notes: changelog
    )

	slackMessageString = "üöÄüöÄüöÄ New Beta version of RainbowSix App #{VersionName} (#{VersionCode}) available on Fabric üöÄüöÄüöÄ"

	slack(
		message: "Master quality gate OK",
		default_payloads: [:last_git_commit_message, :git_author],
		payload: {
		    "Changes" => changelog,
		    "App name" => "Android " + ENV["APP_NAME"],
		    "Version name" => Actions.lane_context["VERSION_NAME"],
		    "Version code" => Actions.lane_context["VERSION_CODE"]
		}
	)

	# TODO Commit, tag and push to git, generate a PR instead of push to master
    #git_add(path: ".")
    #git_commit(path: ".", message: "Version bump")
    #add_git_tag(prefix: "build.")
    #push_to_git_remote

end

error do |lane, exception, options|
  slack(
      message: "(‚ï•Ôπè‚ï•) Something went wrong (‚ï•Ôπè‚ï•)",
      success: false,
      default_payloads: [:lane, :git_branch, :last_git_commit_message],
      attachment_properties: {
          fields: [
              {
                  title: "Error message",
                  value: exception.to_s
              }
          ]
      }
  )
end
